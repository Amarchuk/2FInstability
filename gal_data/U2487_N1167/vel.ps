%!PS-Adobe-2.0
%%Title: vel.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Feb 13 21:58:16 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Arial) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
900 600 M
[ [(Arial) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1020 810 M
31 0 V
5809 0 R
-31 0 V
1020 1020 M
31 0 V
5809 0 R
-31 0 V
1020 1230 M
31 0 V
5809 0 R
-31 0 V
1020 1440 M
31 0 V
5809 0 R
-31 0 V
1020 1650 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1650 M
[ [(Arial) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1020 1860 M
31 0 V
5809 0 R
-31 0 V
1020 2070 M
31 0 V
5809 0 R
-31 0 V
1020 2280 M
31 0 V
5809 0 R
-31 0 V
1020 2490 M
31 0 V
5809 0 R
-31 0 V
1020 2700 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2700 M
[ [(Arial) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
1020 2910 M
31 0 V
5809 0 R
-31 0 V
1020 3120 M
31 0 V
5809 0 R
-31 0 V
1020 3330 M
31 0 V
5809 0 R
-31 0 V
1020 3540 M
31 0 V
5809 0 R
-31 0 V
1020 3750 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3750 M
[ [(Arial) 200.0 0.0 true true 0 ( 300)]
] -66.7 MRshow
1.000 UL
LTb
1020 3960 M
31 0 V
5809 0 R
-31 0 V
1020 4170 M
31 0 V
5809 0 R
-31 0 V
1020 4380 M
31 0 V
5809 0 R
-31 0 V
1020 4590 M
31 0 V
5809 0 R
-31 0 V
1020 4800 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4800 M
[ [(Arial) 200.0 0.0 true true 0 ( 400)]
] -66.7 MRshow
1.000 UL
LTb
1285 600 M
0 63 V
0 4137 R
0 -63 V
stroke
1285 400 M
[ [(Arial) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1949 600 M
0 31 V
0 4169 R
0 -31 V
2613 600 M
0 63 V
0 4137 R
0 -63 V
stroke
2613 400 M
[ [(Arial) 200.0 0.0 true true 0 ( 50)]
] -66.7 MCshow
1.000 UL
LTb
3276 600 M
0 31 V
0 4169 R
0 -31 V
3940 600 M
0 63 V
0 4137 R
0 -63 V
stroke
3940 400 M
[ [(Arial) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
4604 600 M
0 31 V
0 4169 R
0 -31 V
5267 600 M
0 63 V
0 4137 R
0 -63 V
stroke
5267 400 M
[ [(Arial) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
5931 600 M
0 31 V
0 4169 R
0 -31 V
6595 600 M
0 63 V
0 4137 R
0 -63 V
stroke
6595 400 M
[ [(Arial) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
LTb
200 2700 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Arial) 200.0 0.0 true true 0 (V)]
[(Arial) 160.0 -60.0 true true 0 (r)]
[(Arial) 200.0 0.0 true true 0 (, km/s)]
] -46.7 MCshow
grestore
LTb
3940 100 M
[ [(Arial) 200.0 0.0 true true 0 (R, arcsec)]
] -66.7 MCshow
1.000 UP
1.000 UP
2.000 UL
LT0
LTb
5957 4637 M
[ [(Arial) 200.0 0.0 true true 0 (HI)]
] -66.7 MRshow
LT0
1816 4107 Crs
2082 4118 Crs
2347 4118 Crs
2613 4139 Crs
2878 4170 Crs
3144 4170 Crs
3409 4254 Crs
3675 4391 Crs
3940 4517 Crs
4205 4559 Crs
4471 4317 Crs
4736 4191 Crs
5002 4097 Crs
5267 4013 Crs
5533 3960 Crs
5798 3981 Crs
6064 3918 Crs
6329 3939 Crs
6595 3908 Crs
6348 4637 Crs
1.000 UP
2.000 UL
LT1
1816 3950 M
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
235 -305 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -315 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
235 -294 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -283 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
235 -315 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -231 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
235 -179 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -189 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -273 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
235 -556 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -441 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
235 -410 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -399 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
235 -367 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -294 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
235 -378 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
234 -294 R
0 315 V
-31 -315 R
62 0 V
stroke
6298 4097 M
62 0 V
235 -347 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
1816 4107 Crs
2082 4118 Crs
2347 4118 Crs
2613 4139 Crs
2878 4170 Crs
3144 4170 Crs
3409 4254 Crs
3675 4391 Crs
3940 4517 Crs
4205 4559 Crs
4471 4317 Crs
4736 4191 Crs
5002 4097 Crs
5267 4013 Crs
5533 3960 Crs
5798 3981 Crs
6064 3918 Crs
6329 3939 Crs
6595 3908 Crs
1.000 UP
4.000 UL
LT2
LTb
5957 4437 M
[ [(Arial) 200.0 0.0 true true 0 (Stars)]
] -66.7 MRshow
LT2
1285 612 BoxF
1304 861 BoxF
1323 1221 BoxF
1344 1311 BoxF
1362 1500 BoxF
1381 1697 BoxF
1400 1698 BoxF
1418 1729 BoxF
1439 2053 BoxF
1458 2062 BoxF
1477 1888 BoxF
1495 2065 BoxF
1514 2394 BoxF
1535 2210 BoxF
1554 2259 BoxF
1583 2241 BoxF
1620 2193 BoxF
1657 2324 BoxF
1697 2723 BoxF
1734 2725 BoxF
1774 3081 BoxF
1811 3409 BoxF
1848 3199 BoxF
1888 3283 BoxF
1925 3291 BoxF
1973 3827 BoxF
2031 3612 BoxF
2087 3835 BoxF
2146 3709 BoxF
2212 3653 BoxF
2289 3626 BoxF
2366 3649 BoxF
2451 4228 BoxF
2557 3825 BoxF
6348 4437 BoxF
1.000 UP
4.000 UL
LT3
1285 600 M
0 138 V
1254 600 M
62 0 V
-62 138 R
62 0 V
-12 7 R
0 231 V
1273 745 M
62 0 V
-62 231 R
62 0 V
-12 139 R
0 212 V
-31 -212 R
62 0 V
-62 212 R
62 0 V
-10 -125 R
0 218 V
-31 -218 R
62 0 V
-62 218 R
62 0 V
-13 -18 R
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
-12 8 R
0 179 V
-31 -179 R
62 0 V
-62 179 R
62 0 V
-12 -184 R
0 193 V
-31 -193 R
62 0 V
-62 193 R
62 0 V
-13 -158 R
0 184 V
-31 -184 R
62 0 V
-62 184 R
62 0 V
-10 132 R
0 200 V
-31 -200 R
62 0 V
-62 200 R
62 0 V
-12 -190 R
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
-12 -360 R
0 175 V
-31 -175 R
62 0 V
-62 175 R
62 0 V
-13 1 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
-12 146 R
0 189 V
-31 -189 R
62 0 V
-62 189 R
62 0 V
-10 -384 R
0 210 V
-31 -210 R
62 0 V
-62 210 R
62 0 V
-12 -146 R
0 181 V
-31 -181 R
62 0 V
-62 181 R
62 0 V
-2 -200 R
0 181 V
-31 -181 R
62 0 V
-62 181 R
62 0 V
6 -235 R
0 194 V
-31 -194 R
62 0 V
-62 194 R
62 0 V
6 -57 R
0 183 V
-31 -183 R
62 0 V
stroke
1626 2416 M
62 0 V
9 211 R
0 193 V
-31 -193 R
62 0 V
-62 193 R
62 0 V
6 -219 R
0 248 V
-31 -248 R
62 0 V
-62 248 R
62 0 V
9 127 R
0 210 V
-31 -210 R
62 0 V
-62 210 R
62 0 V
6 121 R
0 204 V
-31 -204 R
62 0 V
-62 204 R
62 0 V
6 -401 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
9 -114 R
0 218 V
-31 -218 R
62 0 V
-62 218 R
62 0 V
6 -199 R
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
17 331 R
0 212 V
-31 -212 R
62 0 V
-62 212 R
62 0 V
27 -429 R
0 216 V
-31 -216 R
62 0 V
-62 216 R
62 0 V
25 7 R
0 216 V
-31 -216 R
62 0 V
-62 216 R
62 0 V
28 -369 R
0 271 V
-31 -271 R
62 0 V
-62 271 R
62 0 V
35 -337 R
0 290 V
-31 -290 R
62 0 V
-62 290 R
62 0 V
46 -332 R
0 319 V
-31 -319 R
62 0 V
-62 319 R
62 0 V
46 -311 R
0 351 V
-31 -351 R
62 0 V
-62 351 R
62 0 V
54 257 R
0 292 V
-31 -292 R
62 0 V
-62 292 R
62 0 V
75 -713 R
0 328 V
-31 -328 R
62 0 V
-62 328 R
62 0 V
1285 612 BoxF
1304 861 BoxF
1323 1221 BoxF
1344 1311 BoxF
1362 1500 BoxF
1381 1697 BoxF
1400 1698 BoxF
1418 1729 BoxF
1439 2053 BoxF
1458 2062 BoxF
1477 1888 BoxF
1495 2065 BoxF
1514 2394 BoxF
1535 2210 BoxF
1554 2259 BoxF
1583 2241 BoxF
1620 2193 BoxF
1657 2324 BoxF
1697 2723 BoxF
1734 2725 BoxF
1774 3081 BoxF
1811 3409 BoxF
1848 3199 BoxF
1888 3283 BoxF
1925 3291 BoxF
1973 3827 BoxF
2031 3612 BoxF
2087 3835 BoxF
2146 3709 BoxF
2212 3653 BoxF
2289 3626 BoxF
2366 3649 BoxF
2451 4228 BoxF
2557 3825 BoxF
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial
%%Pages: 1
